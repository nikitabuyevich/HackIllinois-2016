<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// declare virtual keys and global configs
global.tap = 0;
soundMusic = virtual_key_add(room_width/2+128-48, 940-96-48, 96, 96, vk_left);
soundFX = virtual_key_add(room_width/2-128-48, 940-96-48, 96, 96, vk_right);
soundAll = virtual_key_add(room_width/2-48, 940-96-48, 96, 96, vk_up);
start = virtual_key_add(room_width/2-192, 620-96, 384, 192, vk_down);
display_set_gui_size(room_width,room_height);

// saved files variables
ini_open("save.ini");
global.highscore =  ini_read_real("score", "highscore", 0);
global.soundAll = ini_read_real("sound", "all", true);
global.soundFX = ini_read_real("sound", "fx", true);
global.soundMusic = ini_read_real("sound", "music", true);
ini_close();  
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// create buttons
instance_create(room_width/2, 620,oStart);
instance_create(room_width/2-128, 940-96,oBtnFX);
instance_create(room_width/2, 940-96,oBtnMusic);
instance_create(room_width/2+128, 940-96,oBtnTheme);


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// generate moving BG
instance_create(0, 0, oBGMenu);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// control theme music
if (keyboard_check_pressed(vk_left)) {
    if (global.soundMusic) {
        global.soundMusic = false;
        ini_open("save.ini");
        ini_write_real("sound", "music", false);
        ini_close();
    } else {
        global.soundMusic = true;
        ini_open("save.ini");
        ini_write_real("sound", "music", true);    
        ini_close();
    }
}
// control sound fx
if (keyboard_check_pressed(vk_right)) {
    if (global.soundFX) {
        global.soundFX = false;
        ini_open("save.ini");
        ini_write_real("sound", "fx", false);
        ini_close();
    } else {
        global.soundFX = true;
        ini_open("save.ini");
        ini_write_real("sound", "fx", true);    
        ini_close();
    }
}
// control muting sound
if (keyboard_check_pressed(vk_up)) {
    if (global.soundAll) {
        global.soundAll = false;
        ini_open("save.ini");
        ini_write_real("sound", "all", false);
        ini_close();
    } else {
        global.soundAll = true;
        ini_open("save.ini");
        ini_write_real("sound", "all", true);    
        ini_close();
    }
}

// start button
if (keyboard_check_pressed(vk_down)) {
    room_goto(rm_Game);
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_center);
draw_set_font(fnt_default);

// draw font instructions
draw_text_colour(room_width/2, room_height/2-300, "A buffet chef challenged you to#eat as much food as possible or#you will have to pay for every bite!" , c_white, c_white, c_white, c_white, 1);
draw_text_colour(room_width/2+2, room_height/2-298, "A buffet chef challenged you to#eat as much food as possible or#you will have to pay for every bite!" , c_black, c_black, c_black, c_black, 0.2);

draw_text_colour(room_width/2, room_height-220, "PROTIP: You can eat two plates#at once. Even if they're on# differnet sides.#He really doesn't wana pay!" , c_white, c_white, c_white, c_white, 1);
draw_text_colour(room_width/2+1, room_height-219, "PROTIP: You can eat two plates#at once. Even if they're on# differnet sides.#He really doesn't wana pay!" , c_black, c_black, c_black, c_black, 0.2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
